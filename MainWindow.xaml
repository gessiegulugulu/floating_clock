<Window x:Class="floating_clock.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:floating_clock" d:DataContext="{d:DesignInstance Type=local:DataModel}"
        mc:Ignorable="d"
        Title="Floating Clock" 
        Width="100" 
        Height="30"
        SizeToContent="Height"
        HorizontalAlignment="Left" 
        VerticalAlignment="Top" 
        AllowsTransparency="True"
        WindowStyle="None"
        ShowInTaskbar="False"
        MouseDown="Window_MouseDown"
        MouseUp="Window_MouseUp"
        Topmost="{Binding Topmost}"
        Background="{Binding ColorName, Converter={StaticResource ColorNameToColorBrushConverter}}"
        Foreground="White">
        <!-- Width = 140, Height = 192 -->

    <Window.Resources>
        <SolidColorBrush x:Key="fg" Color="#BFFFFFFF" />
        
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource fg}" />
        </Style>

        <!--
        <Style TargetType="ContextMenu">
            <Setter Property="Foreground" Value="{StaticResource fg}" />
            <Setter Property="Background" Value="{Binding ColorName, Converter={StaticResource ColorNameToColorBrushConverter}}"/>
        </Style>
        -->

    </Window.Resources>

    
    <!-- 主布局 -->
    <StackPanel x:Name="layout" Margin="2">
        <!-- <Label x:Name="clock" Content="{Binding Time}" HorizontalContentAlignment="Center" FontSize="14" Visibility="{Binding VisibilityClock}"/>  -->
        <Label x:Name="clock" Content="{Binding Time}" HorizontalContentAlignment="Center" FontSize="16" Visibility="{Binding VisibilityClock}"/> 

        <Grid Height="auto">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />  
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="CPU"  Visibility="{Binding VisibilityCPU}" />
            <Label Grid.Row="0" Grid.Column="1" Content="{Binding CPU}"  Visibility="{Binding VisibilityCPU}"  HorizontalContentAlignment="Right"  />

            <Label Grid.Row="1" Grid.Column="0" Content="内存" Visibility="{Binding VisibilityRAM}"  />
            <Label Grid.Row="1" Grid.Column="1" Content="{Binding RAM}" Visibility="{Binding VisibilityRAM}"  HorizontalContentAlignment="Right"  />

            <Label Grid.Row="2" Grid.Column="0" Content="上传" Visibility="{Binding VisibilityUpload}"  />
            <Label Grid.Row="2" Grid.Column="1" Content="{Binding Upload}" Visibility="{Binding VisibilityUpload}"  HorizontalContentAlignment="Right"  />

            <Label Grid.Row="3" Grid.Column="0" Content="下载" Visibility="{Binding VisibilityDownload}"  />
            <Label Grid.Row="3" Grid.Column="1" Content="{Binding Download}" Visibility="{Binding VisibilityDownload}"  HorizontalContentAlignment="Right"  />

        </Grid>

        <!-- 添加右键菜单 -->
        <StackPanel.ContextMenu>
            <ContextMenu>
                <MenuItem Header="置顶显示" IsCheckable="True" IsChecked="{Binding Topmost, Mode=TwoWay}"/>
                <!--<MenuItem Header="窗口锁定" IsCheckable="True" Checked="MenuItem_Checked" Unchecked="MenuItem_Unchecked"/>-->
                <Separator />
                <MenuItem Header="视图">
                    <MenuItem Header="时钟" IsCheckable="True"    IsChecked="{Binding ShowClock, Mode=TwoWay}" />
                    <MenuItem Header="CPU" IsCheckable="True"     IsChecked="{Binding ShowCPU, Mode=TwoWay}"/>
                    <MenuItem Header="内存" IsCheckable="True"    IsChecked="{Binding ShowRAM, Mode=TwoWay}" />
                    <MenuItem Header="上传网速" IsCheckable="True" IsChecked="{Binding ShowUpload, Mode=TwoWay}" />
                    <MenuItem Header="下载网速" IsCheckable="True" IsChecked="{Binding ShowDownload, Mode=TwoWay}" />
                </MenuItem>
                
                <MenuItem Foreground="{Binding ColorName, Converter={StaticResource ColorNameToOpaqueColorBrushConverter}}">
                    <MenuItem.Header >
                        <TextBlock Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">主题色</TextBlock>
                    </MenuItem.Header>
                    <MenuItem.InputGestureText>
                        ██
                    </MenuItem.InputGestureText> 
                <!-- 
                <MenuItem Header="主题色">
                    <MenuItem.Icon>
                       
                        <Rectangle  Width="12" 
                                    Height="12"
                                    Fill="{Binding ColorName, Converter={StaticResource ColorNameToOpaqueColorBrushConverter}}" 
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center"
                                    />
                       

                    </MenuItem.Icon> -->
                    <MenuItem IsCheckable="True"
                        IsChecked="{Binding ColorName, ConverterParameter=gray, Converter={StaticResource StringToBooleanConverter},  Mode=TwoWay}" 
                        Foreground="{DynamicResource opaque_gray}">
                        <MenuItem.Header>
                            <TextBlock Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">虚无灰</TextBlock>
                        </MenuItem.Header>
                        <MenuItem.InputGestureText>
                            ██
                        </MenuItem.InputGestureText>
                    </MenuItem>
                    <MenuItem IsCheckable="True"
    IsChecked="{Binding ColorName, ConverterParameter=pink, Converter={StaticResource StringToBooleanConverter},  Mode=TwoWay}" 
    Foreground="{DynamicResource opaque_pink}">
                        <MenuItem.Header>
                            <TextBlock Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">红桃粉</TextBlock>
                        </MenuItem.Header>
                        <MenuItem.InputGestureText>
                            ██
                        </MenuItem.InputGestureText>
                    </MenuItem>

                    <MenuItem IsCheckable="True"
    IsChecked="{Binding ColorName, ConverterParameter=purple, Converter={StaticResource StringToBooleanConverter},  Mode=TwoWay}" 
    Foreground="{DynamicResource opaque_purple}">
                        <MenuItem.Header>
                            <TextBlock Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">梦幻紫</TextBlock>
                        </MenuItem.Header>
                        <MenuItem.InputGestureText>
                            ██
                        </MenuItem.InputGestureText>
                    </MenuItem>

                    <MenuItem IsCheckable="True"
    IsChecked="{Binding ColorName, ConverterParameter=blue, Converter={StaticResource StringToBooleanConverter},  Mode=TwoWay}" 
    Foreground="{DynamicResource opaque_blue}">
                        <MenuItem.Header>
                            <TextBlock Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">星空蓝</TextBlock>
                        </MenuItem.Header>
                        <MenuItem.InputGestureText>
                            ██
                        </MenuItem.InputGestureText>
                    </MenuItem>

                    <MenuItem IsCheckable="True"
    IsChecked="{Binding ColorName, ConverterParameter=cyan, Converter={StaticResource StringToBooleanConverter},  Mode=TwoWay}" 
    Foreground="{DynamicResource opaque_cyan}">
                        <MenuItem.Header>
                            <TextBlock Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">薄荷青</TextBlock>
                        </MenuItem.Header>
                        <MenuItem.InputGestureText>
                            ██
                        </MenuItem.InputGestureText>
                    </MenuItem>

                    <MenuItem IsCheckable="True"
    IsChecked="{Binding ColorName, ConverterParameter=green, Converter={StaticResource StringToBooleanConverter},  Mode=TwoWay}" 
    Foreground="{DynamicResource opaque_green}">
                        <MenuItem.Header>
                            <TextBlock Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">嫩草绿</TextBlock>
                        </MenuItem.Header>
                        <MenuItem.InputGestureText>
                            ██
                        </MenuItem.InputGestureText>
                    </MenuItem>

                    <MenuItem IsCheckable="True"
    IsChecked="{Binding ColorName, ConverterParameter=yellow, Converter={StaticResource StringToBooleanConverter},  Mode=TwoWay}" 
    Foreground="{DynamicResource opaque_yellow}">
                        <MenuItem.Header>
                            <TextBlock Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">柠檬黄</TextBlock>
                        </MenuItem.Header>
                        <MenuItem.InputGestureText>
                            ██
                        </MenuItem.InputGestureText>
                    </MenuItem>

                    <MenuItem IsCheckable="True"
    IsChecked="{Binding ColorName, ConverterParameter=orange, Converter={StaticResource StringToBooleanConverter},  Mode=TwoWay}" 
    Foreground="{DynamicResource opaque_orange}">
                        <MenuItem.Header>
                            <TextBlock Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">夕阳橙</TextBlock>
                        </MenuItem.Header>
                        <MenuItem.InputGestureText>
                            ██
                        </MenuItem.InputGestureText>
                    </MenuItem>

                    <MenuItem IsCheckable="True"
    IsChecked="{Binding ColorName, ConverterParameter=red, Converter={StaticResource StringToBooleanConverter},  Mode=TwoWay}" 
    Foreground="{DynamicResource opaque_red}">
                        <MenuItem.Header>
                            <TextBlock Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">活力红</TextBlock>
                        </MenuItem.Header>
                        <MenuItem.InputGestureText>
                            ██
                        </MenuItem.InputGestureText>
                    </MenuItem>
                </MenuItem>
                <Separator/>

                <MenuItem Header="最小化到托盘" Click="MenuItem_Click_Minimize"/>
                <MenuItem Header="帮助..." Click="MenuItem_Click_Help" />
                <MenuItem Header="退出" Click="MenuItem_Click_Exit" />
            </ContextMenu>
        </StackPanel.ContextMenu>


    </StackPanel>
</Window>
